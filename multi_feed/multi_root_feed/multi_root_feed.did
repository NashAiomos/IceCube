type CanisterStatusResponse = record {
  status : CanisterStatusType;
  memory_size : nat;
  cycles : nat;
  settings : DefiniteCanisterSettings;
  query_stats : QueryStats;
  idle_cycles_burned_per_day : nat;
  module_hash : opt blob;
  reserved_cycles : nat;
};
type CanisterStatusType = variant { stopped; stopping; running };
type Comment = record { content : text; user : principal; created_at : nat64 };
type DefiniteCanisterSettings = record {
  freezing_threshold : nat;
  controllers : vec principal;
  reserved_cycles_limit : nat;
  log_visibility : LogVisibility;
  wasm_memory_limit : nat;
  memory_allocation : nat;
  compute_allocation : nat;
};
type Like = record { user : principal; created_at : nat64 };
type LogVisibility = variant { controllers; public };
type Post = record {
  repost : vec Like;
  post_id : text;
  photo_url : vec text;
  content : text;
  like : vec Like;
  user : principal;
  created_at : nat64;
  comment : vec Comment;
  feed_canister : principal;
  index : nat64;
};
type Profile = record {
  id : principal;
  avatar_url : text;
  name : text;
  education : text;
  biography : text;
  company : text;
  feed_canister : opt principal;
  handle : text;
  back_img_url : text;
};
type QueryStats = record {
  response_payload_bytes_total : nat;
  num_instructions_total : nat;
  num_calls_total : nat;
  request_payload_bytes_total : nat;
};
service : {
  batch_get_profile : (vec principal) -> (vec Profile) query;
  create_feed_canister : () -> (principal);
  create_profile : (Profile) -> (bool);
  follow : (principal) -> ();
  get_feed_wasm : () -> (blob) query;
  get_feeds_latest_feed : (nat64) -> (vec Post) composite_query;
  get_follower_number : (principal) -> (nat64) query;
  get_followers_list : (principal) -> (vec principal) query;
  get_following_list : (principal) -> (vec principal) query;
  get_following_number : (principal) -> (nat64) query;
  get_profile : (principal) -> (opt Profile) query;
  get_user_feed_canister : (principal) -> (opt principal) query;
  init_user_feed : (principal) -> (principal);
  is_followed : (principal, principal) -> (bool) query;
  is_handle_available : (text) -> (bool) query;
  status : () -> (CanisterStatusResponse);
  update_feed_wasm : (blob, nat64) -> (bool);
  update_handle : (text) -> (bool);
  update_profile : (Profile) -> ();
}

type RootPost = 
 service {
   checkBucket: () -> ();
   createBucket: () -> (principal);
   getAllBuckets: () -> (vec BucketInfoImmutable) query;
   getAvailableBucket: () -> (opt BucketInfoImmutable) query;
   getCommentFetchCanister: () -> (principal) query;
   getLikeFetchCanister: () -> (principal) query;
   getUnavailableBuckets: () -> (vec BucketInfoImmutable) query;
   init: () -> ();
   reCreateBucket: (nat) -> ();
   updateCommentFetchCanister: (principal) -> ();
   updateLikeFetchCanister: (principal) -> ();
 };
type BucketInfoImmutable = 
 record {
   canisterId: principal;
   index: nat;
   postNumber: nat;
 };
service : (principal, principal) -> RootPost
